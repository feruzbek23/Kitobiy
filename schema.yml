openapi: 3.0.3
info:
  title: Book API
  version: 1.0.0
  description: Easily manage and track your books
paths:
  /api/v1/author/:
    get:
      operationId: author_list
      tags:
      - author
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
          description: ''
    post:
      operationId: author_create
      tags:
      - author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      security:
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
  /api/v1/author/{id}/:
    get:
      operationId: author_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - author
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    put:
      operationId: author_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      security:
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    patch:
      operationId: author_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
      security:
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    delete:
      operationId: author_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - author
      security:
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/book/:
    get:
      operationId: book_retrieve
      tags:
      - book
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: book_create
      tags:
      - book
      security:
      - basicAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: book_update
      tags:
      - book
      security:
      - basicAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: book_destroy
      tags:
      - book
      security:
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/book/{id}/:
    get:
      operationId: book_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - book
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: book_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - book
      security:
      - basicAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: book_update_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - book
      security:
      - basicAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: book_destroy_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - book
      security:
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/book/{id}/upload_files:
    post:
      operationId: book_upload_files_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - book
      security:
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/profile/:
    get:
      operationId: profile_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - profile
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResgistration'
          description: ''
    post:
      operationId: profile_create
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserResgistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserResgistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserResgistration'
        required: true
      security:
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResgistration'
          description: ''
  /api/v1/profile/{id}/:
    get:
      operationId: profile_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user profile.
        required: true
      tags:
      - profile
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResgistration'
          description: ''
    put:
      operationId: profile_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user profile.
        required: true
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserResgistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserResgistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserResgistration'
        required: true
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResgistration'
          description: ''
    patch:
      operationId: profile_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user profile.
        required: true
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserResgistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserResgistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserResgistration'
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResgistration'
          description: ''
    delete:
      operationId: profile_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user profile.
        required: true
      tags:
      - profile
      security:
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
      - id
      - name
    PatchedAuthor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
    PatchedUserResgistration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 255
        password:
          type: string
          writeOnly: true
          maxLength: 128
    UserResgistration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 255
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - email
      - id
      - name
      - password
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
